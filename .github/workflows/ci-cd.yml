name: .NET CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x'
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  build:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest, ubuntu-latest ]
        
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          
      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
        
      - name: Restore dependencies
        run: dotnet restore
        
      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Setup SQL Server (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=YourStrong@Passw0rd' -p 1433:1433 --name sqlserver -d mcr.microsoft.com/mssql/server:2022-latest
          sleep 30

      - name: Run Tests (Ubuntu)
        run: dotnet test --configuration Release --no-build --verbosity minimal --logger "console;verbosity=minimal"
        if: matrix.os == 'ubuntu-latest'
        env:
          ConnectionStrings__DefaultConnection: "Server=localhost,1433;Database=BusBusTestDb;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true;"
        
      - name: Run Tests (Windows with LocalDB)
        run: dotnet test --configuration Release --no-build --verbosity minimal --logger "console;verbosity=minimal"
        if: matrix.os == 'windows-latest'
        
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}
          path: "**/*.trx"
        if: always()
        
  publish:
    name: Publish
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: windows-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          
      - name: Restore dependencies
        run: dotnet restore
        
      - name: Build
        run: dotnet build --configuration Release --no-restore
        
      - name: Publish
        run: dotnet publish --configuration Release --output publish
        
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: published-app
          path: publish
