name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-coverage:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore --configuration Release
      - name: Test with coverage
        run: dotnet test --no-build --configuration Release --collect:"XPlat Code Coverage" --results-directory ./CoverageReport
      - name: Install ReportGenerator
        run: dotnet tool install -g dotnet-reportgenerator-globaltool
      - name: Generate coverage report
        run: reportgenerator -reports:CoverageReport/**/coverage.cobertura.xml -targetdir:CoverageReport -reporttypes:Html
      - name: Upload coverage report artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: CoverageReport/index.html
      - name: Fail if coverage is too low
        run: |
          $coverage = Select-String -Path CoverageReport/index.html -Pattern 'Line coverage' | Select-Object -First 1
          if ($coverage -and ($coverage -match '([0-9]+)%')) {
            $percent = [int]$matches[1]
            if ($percent -lt 80) { exit 1 }
          }
        shell: pwsh
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: CoverageReport/**/coverage.cobertura.xml
          fail_ci_if_error: true
