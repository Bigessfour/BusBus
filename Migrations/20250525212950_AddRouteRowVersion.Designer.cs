// <auto-generated />
using System;
using BusBus.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusBus.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250525212950_AddRouteRowVersion")]
    partial class AddRouteRowVersion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BusBus.Models.Driver", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Drivers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            FirstName = "John",
                            LastName = "Smith",
                            LicenseNumber = "DL123456",
                            Name = "John Smith"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            FirstName = "Mary",
                            LastName = "Johnson",
                            LicenseNumber = "DL234567",
                            Name = "Mary Johnson"
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            FirstName = "Robert",
                            LastName = "Brown",
                            LicenseNumber = "DL345678",
                            Name = "Robert Brown"
                        },
                        new
                        {
                            Id = new Guid("44444444-4444-4444-4444-444444444444"),
                            FirstName = "Lisa",
                            LastName = "Davis",
                            LicenseNumber = "DL456789",
                            Name = "Lisa Davis"
                        },
                        new
                        {
                            Id = new Guid("55555555-5555-5555-5555-555555555555"),
                            FirstName = "Michael",
                            LastName = "Wilson",
                            LicenseNumber = "DL567890",
                            Name = "Michael Wilson"
                        });
                });

            modelBuilder.Entity("BusBus.Models.Route", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMEndingMileage")
                        .HasColumnType("int");

                    b.Property<int>("AMRiders")
                        .HasColumnType("int");

                    b.Property<int>("AMStartingMileage")
                        .HasColumnType("int");

                    b.Property<Guid?>("DriverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EndLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PMEndingMileage")
                        .HasColumnType("int");

                    b.Property<int>("PMRiders")
                        .HasColumnType("int");

                    b.Property<int>("PMStartMileage")
                        .HasColumnType("int");

                    b.Property<DateTime>("RouteDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime>("ScheduledTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("StartLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DriverId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("BusBus.Models.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BusNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LicensePlate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            BusNumber = "101",
                            Capacity = 72,
                            IsActive = true,
                            LicensePlate = "BUS-101",
                            Model = "Blue Bird All American FE",
                            Number = "101"
                        },
                        new
                        {
                            Id = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            BusNumber = "102",
                            Capacity = 66,
                            IsActive = true,
                            LicensePlate = "BUS-102",
                            Model = "Thomas C2 Jouley",
                            Number = "102"
                        },
                        new
                        {
                            Id = new Guid("cccccccc-cccc-cccc-cccc-cccccccccccc"),
                            BusNumber = "103",
                            Capacity = 78,
                            IsActive = true,
                            LicensePlate = "BUS-103",
                            Model = "IC Bus CE Series",
                            Number = "103"
                        },
                        new
                        {
                            Id = new Guid("dddddddd-dddd-dddd-dddd-dddddddddddd"),
                            BusNumber = "104",
                            Capacity = 72,
                            IsActive = false,
                            LicensePlate = "BUS-104",
                            Model = "Blue Bird Vision",
                            Number = "104"
                        },
                        new
                        {
                            Id = new Guid("eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee"),
                            BusNumber = "105",
                            Capacity = 90,
                            IsActive = true,
                            LicensePlate = "BUS-105",
                            Model = "Thomas HDX",
                            Number = "105"
                        });
                });

            modelBuilder.Entity("BusBus.Models.Route", b =>
                {
                    b.HasOne("BusBus.Models.Driver", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("BusBus.Models.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Driver");

                    b.Navigation("Vehicle");
                });
#pragma warning restore 612, 618
        }
    }
}
